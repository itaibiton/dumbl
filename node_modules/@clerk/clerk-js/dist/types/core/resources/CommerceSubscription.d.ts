import type { CancelSubscriptionParams, CommerceMoney, CommerceSubscriptionItemJSON, CommerceSubscriptionItemResource, CommerceSubscriptionJSON, CommerceSubscriptionPlanPeriod, CommerceSubscriptionResource, CommerceSubscriptionStatus } from '@clerk/types';
import { BaseResource, CommercePlan, DeletedObject } from './internal';
export declare class CommerceSubscription extends BaseResource implements CommerceSubscriptionResource {
    id: string;
    status: Extract<CommerceSubscriptionStatus, 'active' | 'past_due'>;
    activeAt: Date;
    createdAt: Date;
    pastDueAt: Date | null;
    updatedAt: Date | null;
    nextPayment: {
        amount: CommerceMoney;
        date: Date;
    } | null;
    subscriptionItems: CommerceSubscriptionItemResource[];
    constructor(data: CommerceSubscriptionJSON);
    protected fromJSON(data: CommerceSubscriptionJSON | null): this;
}
export declare class CommerceSubscriptionItem extends BaseResource implements CommerceSubscriptionItemResource {
    id: string;
    paymentSourceId: string;
    plan: CommercePlan;
    planPeriod: CommerceSubscriptionPlanPeriod;
    status: CommerceSubscriptionStatus;
    createdAt: Date;
    pastDueAt: Date | null;
    periodStartDate: Date;
    periodEndDate: Date | null;
    canceledAtDate: Date | null;
    periodStart: number;
    periodEnd: number;
    canceledAt: number | null;
    amount?: CommerceMoney;
    credit?: {
        amount: CommerceMoney;
    };
    constructor(data: CommerceSubscriptionItemJSON);
    protected fromJSON(data: CommerceSubscriptionItemJSON | null): this;
    cancel(params: CancelSubscriptionParams): Promise<DeletedObject>;
}
